name: Build, Check, and Test

on:
  push:
    branches:
      - main
      - 13-implement-robust-regression-ft
  pull_request:
    branches:
      - main
      - develop

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.9", "3.10", "3.11", "3.12"]

    steps:
      - uses: actions/checkout@v4
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install dependencies and Build package
        run: |
          python -m pip install --upgrade pip setuptools wheel
          pip install .["git_ci"]

      - name: Run format check
        run: |
          BLACK_OUTPUT=$(black --check --diff --color ./auxiliary_scripts ./examples ./src ./tests)
          echo "$BLACK_OUTPUT"
          if echo "$BLACK_OUTPUT" | grep -q "Oh no!"; then
            echo "Black check failed"
            exit 1
          fi

      - name: Run import sort check
        run: |
          ISORT_OUTPUT=$(isort --check --diff --color ./auxiliary_scripts ./examples ./src ./tests)
          if [ -n "$ISORT_OUTPUT" ]; then
            echo "$ISORT_OUTPUT"
            echo "Isort check failed"
            exit 1
          fi

      - name: Run pyright static type check
        run: |
          PYRIGHT_OUTPUT=$(pyright ./auxiliary_scripts ./examples ./src ./tests)
           echo "$PYRIGHT_OUTPUT"
           if ! echo "$PYRIGHT_OUTPUT" | grep -q "0 errors"; then
             echo "Pyright check failed"
             exit 1
           fi

      - name: Run mypy static type check
        run: |
          MYPY_OUTPUT=$(mypy ./auxiliary_scripts ./examples ./src ./tests)
          echo "$MYPY_OUTPUT"
          if ! echo "$MYPY_OUTPUT" | grep -q "Success"; then
            echo "Mypy check failed"
            exit 1
          fi

      - name: Run ruff lint check
        run: |
          RUFF_OUTPUT=$(ruff check ./auxiliary_scripts ./examples ./src ./tests)
          echo "$RUFF_OUTPUT"
          if ! echo "$RUFF_OUTPUT" | grep -q "All checks passed!"; then
            echo "Ruff check failed"
            exit 1
          fi

      - name: Run pycodestyle check
        run: |
          PYCODESTYLE_OUTPUT=$(pycodestyle ./auxiliary_scripts ./examples ./src ./tests --max-line-length=88)
          echo "$PYCODESTYLE_OUTPUT"
          if [ -n "$PYCODESTYLE_OUTPUT" ]; then
            echo "Pycodestyle check failed"
            exit 1
          fi

      - name: Run Cython check
        run: |
          CYTHON_LINT_OUTPUT=$(cython-lint src/robust_hermite_ft/hermite_functions/_c_hermite.pyx)
          echo "$CYTHON_LINT_OUTPUT"
          if [ -n "$CYTHON_LINT_OUTPUT" ]; then
            echo "Cython lint check failed"
            exit 1
          fi

      - name: Run tests
        run: |
          pytest --cov=robust_hermite_ft ./tests -n="auto" --cov-report=xml -x --no-jit

      - name: Upload coverage report
        uses: codecov/codecov-action@v4.0.1
        with:
          file: ./coverage.xml
          fail_ci_if_error: true
          token: ${{ secrets.CODECOV_TOKEN }}
